{"version":3,"sources":["services/person.js","components/notification.js","components/filter.js","components/personform.js","components/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObj","post","id","delete","put","Notification","message","success","className","text","Filter","newSearch","handleNewSearch","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNum","handleNumChange","onSubmit","type","Persons","persons","remove","filter","person","name","toLowerCase","includes","map","key","number","onClick","App","useState","setPersons","setNewName","setNewNum","setNewSearch","setMessage","useEffect","personService","initialPersons","event","target","preventDefault","some","p","window","confirm","oldPerson","find","newPerson","returnedPerson","setTimeout","catch","e","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ee936af.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst add = personObj => {\r\n    const request = axios.post(baseUrl, personObj);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (personObj) => {\r\n    const request = axios.put(`${baseUrl}/${personObj.id}`, personObj);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll, add, remove, update };\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null)\r\n    return null;\r\n  else if (message.success)\r\n  {\r\n    return (\r\n      <div className=\"successNotification\">\r\n        {message.text}\r\n      </div>\r\n    )\r\n  }\r\n  else\r\n    return (\r\n      <div className=\"failNotification\">\r\n        {message.text}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Filter = ({newSearch, handleNewSearch}) => (\r\n  <div>\r\n    filter shown with <input value={newSearch} onChange={handleNewSearch}/>\r\n  </div>\r\n);\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({addPerson, newName, handleNameChange, \r\n  newNum, handleNumChange}) => (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange}/>\r\n      </div>\r\n      <div>\r\n        number: <input value={newNum} onChange={handleNumChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n);\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons = ({persons, newSearch, remove}) => (\r\n  persons\r\n    .filter((person) =>\r\n      person.name.toLowerCase().includes(newSearch.toLowerCase()))\r\n    .map((person) => \r\n      <div key={person.id}>\r\n        {person.name} {person.number}\r\n        <button onClick={() => remove(person)}>delete</button>\r\n      </div>\r\n      )\r\n);\r\n\r\nexport default Persons;","import './index.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport personService from './services/person';\r\nimport Notification from './components/notification';\r\nimport Filter from './components/filter';\r\nimport PersonForm from './components/personform';\r\nimport Persons from './components/persons';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNum, setNewNum ] = useState('');\r\n  const [ newSearch, setNewSearch ] = useState('');\r\n  const [ message, setMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => setPersons(initialPersons))\r\n  }, []);\r\n\r\n  const handleNameChange = (event) => setNewName(event.target.value);\r\n  const handleNumChange = (event) => setNewNum(event.target.value);\r\n  const handleNewSearch = (event) => setNewSearch(event.target.value);\r\n\r\n  const addPerson = event => {\r\n    event.preventDefault();\r\n    const personObj = { name: newName, number: newNum};\r\n\r\n    if (persons.some(p => p.name === newName))\r\n    {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace\r\n              the old number with a new one?`)) {\r\n                const oldPerson = persons.find(p => p.name === newName);\r\n                const newPerson = { ...oldPerson, number: newNum};\r\n                personService\r\n                  .update(newPerson)\r\n                  .then(returnedPerson => {\r\n                    setPersons(persons.map(person => person.id !== oldPerson.id\r\n                        ? person : returnedPerson));\r\n                    setMessage(\r\n                      {\r\n                      text: `Number belonging to ${newPerson.name} changed`,\r\n                      success: true\r\n                      }\r\n                      );\r\n                    setTimeout( () => {\r\n                      setMessage(null)\r\n                    }, 4000);\r\n                  })\r\n                  .catch(e => {\r\n                    if (e.response.data.name === 'ValidationError')\r\n                    {\r\n                      setMessage(\r\n                        {\r\n                          text: e.response.data.error,\r\n                          success: false\r\n                        }\r\n                      );\r\n                    }\r\n                    else {\r\n                      setMessage(\r\n                        {\r\n                        text: `Information of ${newPerson.name} has already been removed from server`,\r\n                        success: false\r\n                        }\r\n                      );\r\n                      setPersons(persons.filter(person => person.id !== newPerson.id));\r\n                    }\r\n                    setTimeout( () => {\r\n                      setMessage(null)\r\n                    }, 4000);\r\n                  });\r\n              }\r\n    }\r\n    else \r\n    {\r\n      personService\r\n        .add(personObj)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson));\r\n          setMessage(\r\n            {\r\n            text: `Added ${personObj.name}`,\r\n            success: true\r\n            }\r\n          );\r\n          setTimeout( () => {\r\n            setMessage(null)\r\n          }, 4000);\r\n        }) \r\n        .catch(e => {\r\n          setMessage(\r\n            {\r\n            text: e.response.data.error,\r\n            success: false\r\n            });\r\n          setTimeout( () => {\r\n            setMessage(null)\r\n          }, 4000);\r\n        })\r\n    }\r\n\r\n    setNewName('');\r\n    setNewNum('');\r\n  };\r\n\r\n  const removePerson = person => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      personService \r\n        .remove(person.id)\r\n        .then(id => {\r\n          setPersons(persons.filter(p => person.id !== p.id))\r\n          setMessage({text: `Deleted ${person.name}`, success: true});\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 4000);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div> \r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification message={message}/>\r\n\r\n      <Filter newSearch={newSearch} handleNewSearch={handleNewSearch}/>\r\n\r\n      <h3>add a new</h3>\r\n\r\n      <PersonForm addPerson={addPerson} newName={newName}\r\n                  handleNameChange={handleNameChange} newNum={newNum}\r\n                  handleNumChange={handleNumChange} />\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Persons persons={persons} newSearch={newSearch} remove={removePerson}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}